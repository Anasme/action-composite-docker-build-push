name: 'action-composite-docker-build-push'
description: 'build with proper dockerfile and push docker image to private repo'
inputs:
  ENV:
    description: “Docker private registry url”
    required: false
  BATCH:
    description: “Docker private registry url”
    required: false
  # container_registry_login:
  #   description: “Login for image registry”
  #   required: true
  # container_registry_password:
  #   description: “Password for image registry (token for scw)”
  #   required: true
outputs:
  image_found:
    description: 'Set output if image is found in SCW docker registry'
    value: ${{ steps.check_existing_docker_image.outputs.image_found }}
  image_not_found:
    description: 'Set output if image is not found in SCW docker registry'
    value: ${{ steps.check_existing_docker_image.outputs.image_not_found }}
runs:
  using: 'composite'
  steps:
    - name: Build service image
      if: '!inputs.BATCH'
      run: |
        echo "batch inactiv"
      shell: bash

    - name: Build batch image
      if: 'inputs.BATCH'
      run: |
        echo "batch activ"
      shell: bash
    - name: prep
      id: prep
      run: |
        if [[ -n "${{ inputs.BATCH }}" ]]; then
          IMAGE_NAME=mysql:8.0.28-batch
        fi
        TAG_SHA="${IMAGE_NAME}"
        echo "tag_sha=${TAG_SHA}" >> $GITHUB_OUTPUT
      shell: bash
    - name: Check if image exist on SCW docker registry
      id: check_existing_docker_image
      run: |
        # if ! docker manifest inspect mysql:8.0.29 > /dev/null; then
        #   echo ::set-output name=image_found::false
        # else
        #   echo ::set-output name=image_found::true  
        # fi
        if docker manifest inspect ${{ steps.prep.outputs.tag_sha }} > /dev/null; then
          echo "image_found=true" >> $GITHUB_OUTPUT
        else
          echo "image_found=false" >> $GITHUB_OUTPUT
        fi
      shell: bash
