name: "action-composite-docker-build-push"
description: "build and push docker image with dockerfile"
inputs:
  batch_profile:
    description: “Username for image registry”
    required: true
  schedule:
    description: “Password for image registry”
    required: true
  cron:
    description: "toto"
    required: false
  release_name:
    description: "personalize release name"
    required: false 
runs:
  using: "composite"
  steps:
    - name: Deploy helm chart yuzer-service-chart
      run: |

        ## Setup cronJob batch_profile & schedule
        if [[ -n "${{ inputs.cron }}" ]]; then
          declare -a batch_profile=(${{ inputs.batch_profile }})
          declare -a schedule=(${{ inputs.schedule }})
        fi

        ## Set image tag
        TAG_SHORTREF=${GITHUB_SHA::8}
        echo "Dockerimage tag is $TAG_SHORTREF"  

        ## Set namespace
        case ${GITHUB_REF} in
          refs/heads/ops) NAMESPACE=dms-ops;;
          refs/heads/master) NAMESPACE=dms-dev;;
          refs/heads/demo) NAMESPACE=dms-demo;;
          refs/heads/prod) NAMESPACE=dms-production;;
        esac
        echo "Namespace is set as $NAMESPACE"
        ## Set release-name
        RELEASE_NAME=${{ github.event.repository.name }}
        if [[ -n "${{ inputs.release_name }}" ]]; then
          RELEASE_NAME=${{inputs.release_name}}
        if [[ -n "${{ inputs.cron }}" ]]; then
          RELEASE_NAME=${RELEASE_NAME}-batch
        fi
        echo "The release name is : $RELEASE_NAME"

        ## Set value file
        HELM_VALUES_FILE=${RELEASE_NAME}-values.yaml
        echo "The values file used will be: $HELM_VALUES_FILE"

        # Launch install
        if [[ -n "${{ inputs.cron }}" ]]; then
          for i in "${!batch_profile[@]}"; do
              echo "helm upgrade --install $RELEASE_NAME yuzer-helm-charts/yuzer-service-chart -f $HELM_VALUES_FILE --set image.tag=$TAG_SHORTREF --set cronProfile=${batch_profile[i]} --set schedule=\"${schedule[i]}\"  --kubeconfig /tmp/kubeconfig.yml --dry-run --debug -n $NAMESPACE"
          done
        else
          echo "helm upgrade --install $RELEASE_NAME yuzer-helm-charts/yuzer-service-chart --set image.tag=$TAG_SHORTREF --kubeconfig /tmp/kubeconfig.yml --dry-run --debug -n dms-$env"
        fi
      shell: bash
      